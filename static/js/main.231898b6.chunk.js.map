{"version":3,"sources":["Components/AddandSubtract.jsx","Components/Counting.jsx","Components/Todo.jsx","App.js","serviceWorker.js","index.js"],"names":["AddandSubtract","props","addOne","setState","input","state","minusOne","moreThan5","alert","lessThan5","this","onClick","React","Component","Countup","startTimer","timerOn","timerTime","timerStart","Date","now","timer","setInterval","seconds","Math","floor","slice","minutes","hours","className","Todo","handleSubmit","event","preventDefault","data","console","log","handleInputChange","target","name","value","inputValue","onSubmit","type","placeholder","onChange","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2rBA4DeA,E,wCAzDX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAORC,OAAS,WACP,EAAKC,SAAS,CACZC,MAAO,EAAKC,MAAMD,MAAQ,KAVd,EAchBE,SAAW,WACT,EAAKH,SAAS,CACZC,MAAO,EAAKC,MAAMD,MAAQ,KAhBd,EAoBhBG,UAAY,WACV,GAAG,EAAKF,MAAMD,OAAS,EAIrB,OAHA,EAAKD,SAAS,CACVC,MAAO,EAAKC,MAAMD,QAEfI,MAAM,mBAzBD,EA6BhBC,UAAY,WACR,GAAG,EAAKJ,MAAMD,QAAU,EAIpB,OAHA,EAAKD,SAAS,CACVC,MAAO,EAAKC,MAAMD,QAEfI,MAAM,wBA/BnB,EAAKH,MAAQ,CACXD,MAAO,GAJK,E,qDAsCR,IAAD,OACL,OACI,6BACI,4BAAKM,KAAKL,MAAMD,OAChB,4BAAQO,QAAS,WACb,EAAKT,SACL,EAAKK,cAFT,KAKA,4BAAQI,QAAS,WACb,EAAKL,WACL,EAAKG,cAFT,U,GAhDaG,IAAMC,W,scC0CpBC,E,wCAzCb,WAAYb,GAAO,IAAD,8BACd,cAAMA,IAQVc,WAAa,WACX,EAAKZ,SAAS,CACZa,SAAS,EACTC,UAAW,EAAKZ,MAAMY,UACtBC,WAAYC,KAAKC,MAAQ,EAAKf,MAAMY,YAEtC,EAAKI,MAAQC,aAAY,WACvB,EAAKnB,SAAS,CACZc,UAAWE,KAAKC,MAAQ,EAAKf,MAAMa,eAEpC,KAjBD,EAAKb,MAAQ,CACXW,SAAS,EACTE,WAAY,EACZD,UAAW,GALC,E,gEAuBdP,KAAKK,e,+BAGA,IACCE,EAAcP,KAAKL,MAAnBY,UACJM,GAAW,IAAOC,KAAKC,MAAMR,EAAY,KAAQ,IAAKS,OAAO,GAC7DC,GAAW,IAAOH,KAAKC,MAAMR,EAAY,KAAS,IAAKS,OAAO,GAC9DE,GAAS,IAAMJ,KAAKC,MAAMR,EAAY,OAAUS,OAAO,GAC3D,OACE,yBAAKG,UAAU,aACb,yBAAKA,UAAU,qBAAqBD,EAApC,MAA8CD,EAA9C,MAA0DJ,Q,GAlC5CX,IAAMC,W,6cC4CbiB,E,wCA3Cb,WAAY7B,GAAO,IAAD,8BAChB,cAAMA,IAOR8B,aAAe,SAACC,GACdA,EAAMC,iBACN,IAAMC,EAAO,EAAK7B,MAClB8B,QAAQC,IAAI,gBAAiBF,IAXb,EAclBG,kBAAoB,SAACL,GACnBA,EAAMC,iBACN,EAAK9B,SAAL,eACG6B,EAAMM,OAAOC,KAAOP,EAAMM,OAAOE,SAfpC,EAAKnC,MAAM,CACToC,WAAY,IAHE,E,gEAsBhB/B,KAAKP,SAAS,CACZsC,WAAY,Y,+BAIP,IACAA,EAAc/B,KAAKL,MAAnBoC,WAEP,OACE,6BACE,yCACA,0BAAMC,SAAYhC,KAAKqB,cACrB,6BAAMU,GACN,2BAAOE,KAAK,OAAOC,YAAY,YAAYL,KAAM,aAAaM,SAAYnC,KAAK2B,oBAC/E,gD,GArCSzB,IAAMC,W,4cCiBViC,E,6JAVX,OACE,yBAAKjB,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GAPUjB,IAAMC,WCMJkC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.231898b6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass AddandSubtract extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    \r\n        this.state = {\r\n          input: 0\r\n        }\r\n      }\r\n    \r\n      addOne = () => {\r\n        this.setState({\r\n          input: this.state.input + 1\r\n        })\r\n      }\r\n    \r\n      minusOne = () => {\r\n        this.setState({\r\n          input: this.state.input - 1\r\n        })\r\n      }\r\n    \r\n      moreThan5 = () => {\r\n        if(this.state.input >= 5){\r\n          this.setState({\r\n              input: this.state.input\r\n          })\r\n          return alert(\"can't add more\")\r\n        }\r\n      }\r\n      \r\n      lessThan5 = () => {\r\n          if(this.state.input <= -5){\r\n              this.setState({\r\n                  input: this.state.input\r\n              })\r\n              return alert(\"can't subtract more\")\r\n          }\r\n      }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <h1>{this.state.input}</h1>\r\n                <button onClick={()=> {\r\n                    this.addOne(); \r\n                    this.moreThan5()\r\n                }}>+\r\n                </button>\r\n                <button onClick={()=>{\r\n                    this.minusOne()\r\n                    this.lessThan5();\r\n                }}>-\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddandSubtract;","import React from 'react';\r\n\r\nclass Countup extends React.Component {\r\n  constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        timerOn: false,\r\n        timerStart: 0,\r\n        timerTime: 0\r\n      }\r\n  }\r\n\r\n  startTimer = () => {\r\n    this.setState({\r\n      timerOn: true,\r\n      timerTime: this.state.timerTime,\r\n      timerStart: Date.now() - this.state.timerTime\r\n    });\r\n    this.timer = setInterval(() => {\r\n      this.setState({\r\n        timerTime: Date.now() - this.state.timerStart\r\n      });\r\n    }, 10);\r\n  };\r\n\r\n  componentDidMount(){\r\n      this.startTimer();\r\n  }\r\n\r\n  render(){\r\n    const { timerTime } = this.state;\r\n    let seconds = (\"0\" + (Math.floor(timerTime / 1000) % 60)).slice(-2);\r\n    let minutes = (\"0\" + (Math.floor(timerTime / 60000) % 60)).slice(-2);\r\n    let hours = (\"0\" + Math.floor(timerTime / 3600000)).slice(-2);\r\n    return(\r\n      <div className=\"stopWatch\">\r\n        <div className=\"Stopwatch-display\">{hours} : {minutes} : {seconds}</div>\r\n      </div>\r\n        \r\n      )\r\n  }\r\n\r\n};\r\n\r\nexport default Countup;","import React from 'react';\r\n\r\nclass Todo extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state={\r\n      inputValue: ''\r\n    }\r\n  }\r\n\r\n\r\n  handleSubmit = (event) =>{\r\n    event.preventDefault(); // prevent default action of the form\r\n    const data = this.state\r\n    console.log(\"Final data is\", data)\r\n  }\r\n\r\n  handleInputChange = (event) =>{\r\n    event.preventDefault();\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    })\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      inputValue: \"Kevin\"\r\n    })\r\n  }\r\n\r\n  render(){\r\n    const {inputValue} = this.state\r\n\r\n    return(\r\n      <div>\r\n        <h1>Todo List</h1>\r\n        <form onSubmit = {this.handleSubmit}>\r\n          <div>{inputValue}</div>\r\n          <input type=\"text\" placeholder=\"Your Name\" name =\"inputValue\" onChange = {this.handleInputChange} />\r\n          <button>Submit</button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Todo;","import React from 'react';\nimport AddandSubtract from './Components/AddandSubtract';\nimport Countup from './Components/Counting';\nimport Todo from './Components/Todo';\nimport './App.css';\n\nclass App extends React.Component {\n\n  render() {\n    return(\n      <div className=\"app\">\n        <AddandSubtract/>\n        <Countup/>\n        <Todo/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}